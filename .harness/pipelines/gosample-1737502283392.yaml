pipeline:
  identifier: Build_gosample_1737502291070
  name: Build gosample
  orgIdentifier: default
  projectIdentifier: samplayground
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: Samgithub
        repoName: gosample
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: gobuild
                  name: go_build
                  spec:
                    command: go build
                  timeout: ""
                  type: Run
              - step:
                  identifier: gotestcoverage
                  name: go_test_coverage
                  spec:
                    command: go test -coverprofile=coverage.out ./...
                  timeout: ""
                  type: Run
              - step:
                  identifier: gotestreport
                  name: go_test_report
                  spec:
                    command: "export GOBIN=/home/harness/go/bin\n\t\texport PATH=/home/harness/go/bin:$PATH\n\t\techo $PATH\n\t\tgo install github.com/jstemmer/go-junit-report/v2@latest\n\t\tgo test -v 2>&1 ./... | go-junit-report -set-exit-code > report.xml"
                    reports:
                      spec:
                        paths:
                          - /harness/report.xml
                      type: JUnit
                  timeout: ""
                  type: Run
              - step:
                  type: BuildAndPushDockerRegistry
                  name: BuildAndPushDockerRegistry_1
                  identifier: BuildAndPushDockerRegistry_1
                  spec:
                    connectorRef: samdockerhub
                    repo: samarthsud/gosample
                    tags:
                      - latest
                    caching: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        type: CI
    - stage:
        name: test-rspm
        identifier: testrspm
        description: ""
        type: SecurityTests
        spec:
          cloneCodebase: true
          caching:
            enabled: true
          buildIntelligence:
            enabled: true
          platform:
            arch: Amd64
            os: Linux
          runtime:
            spec: {}
            type: Cloud
          execution:
            steps:
              - step:
                  type: SscaCompliance
                  name: SCS Compliance_1
                  identifier: SCSCompliance_1
                  spec:
                    source:
                      type: github
                      spec:
                        connectorRef: Samgithub
                        repoName: test-compcheck
                        scan_org: true
